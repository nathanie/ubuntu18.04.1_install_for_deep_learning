install instructions:

install essintials:
sudo apt-get install openjdk-8-jdk git python-dev python3-dev python-numpy python3-numpy python-six python3-six build-essential python-pip python3-pip python-virtualenv swig python-wheel python3-wheel libcurl3-dev libcupti-dev

sudo apt-get install libcurl4-openssl-dev

sudo add-apt-repository ppa:graphics-drivers/ppa
sudo apt update
sudo apt upgrade

ubuntu-drivers devices

sudo ubuntu-drivers autoinstall

then reboot:
sudo reboot

nvidia-smi

download cuda 10.0 driver from:
https://developer.nvidia.com/cuda-downloads?target_os=Linux&target_arch=x86_64&target_distro=Ubuntu&target_version=1804&target_type=deblocal

and install it using:

sudo dpkg -i cuda-repo-ubuntu1804-10-0-local-10.0.130-410.48_1.0-1_amd64.deb
sudo apt-key add /var/cuda-repo-10-0-local/7fa2af80.pub ## this should be printed in command line after the previous command
sudo apt-get update
sudo apt-get install cuda

download cudnn from
https://developer.nvidia.com/rdp/cudnn-download
and then install the files
sudo dpkg -i libcudnn7_7.3.1.20-1+cuda10.0_amd64.deb
sudo dpkg -i libcudnn7-dev_7.3.1.20-1+cuda10.0_amd64.deb
sudo dpkg -i libcudnn7-doc_7.3.1.20-1+cuda10.0_amd64.deb

or use the .tgz file:
tar -xzvf cudnn-9.0-linux-x64-v7.4.1.5.tgz #adjust to the name of the file you downloaded

go to /usr/include/cudnn.h and change the line #include "driver_types.h" to #include <driver_types.h> (should be line 63)

now verify the cudnn installation:
cp -r /usr/src/cudnn_samples_v7/ $HOME
cd  $HOME/cudnn_samples_v7/mnistCUDNN
make clean && make
./mnistCUDNN

if you get "Test passed!" your installation is correct

now use: 
gedit ~/.bashrc

and add the following to the end off the file:
export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64"
export CUDA_HOME=/usr/local/cuda

reload the .bashrc file using:
source ~/.bashrc
sudo ldconfig

and verify your cuda-home is correctly defined
echo $CUDA_HOME

sudo apt-get update

sudo apt-get install \
    apt-transport-https \
    ca-certificates \
    curl \
    software-properties-common

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

install docker-ce:
sudo apt-get remove docker docker-engine docker.io
sudo apt-get update
sudo apt-get install \
    apt-transport-https \
    ca-certificates \
    curl \
    software-properties-common

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

sudo apt-key fingerprint 0EBFCD88

sudo add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable"

sudo apt-get update

sudo apt-get install docker-ce

run hello-world docker to make sure you have all figured out correctly:
sudo docker run hello-world

add nvidia-docker key:
curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | \
  sudo apt-key add -
distribution=$(. /etc/os-release;echo $ID$VERSION_ID)
curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | \
  sudo tee /etc/apt/sources.list.d/nvidia-docker.list
sudo apt-get update

now install nvidia-docker2:
sudo apt-get install nvidia-docker2
sudo pkill -SIGHUP dockerd

to be able to run docker as a non-root user -> add a docker group for the active user:
sudo usermod -aG docker <your-user>

check that nvidia-docker runs well:
docker run --runtime=nvidia --rm nvidia/cuda nvidia-smi

for some reason we have to reinstall the nvidia driver:
sudo apt-get install nvidia-410


docker run --runtime=nvidia --rm -it -p 8888:8888 -p 6006:6006 -v /home/nati:/mnt gcr.io/kaggle-images/python

jupyter notebook --allow-root --ip=0.0.0.0
